openapi: 3.0.0

info:
  version: 0.1.0
  title: Contracts API
  description: API for contracts and jobs

paths:
  /contracts:
    get:
      summary: Get all non-terminated contracts where the current user is either a contractor or a client
      operationId: getContracts
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contract'
        401:
          description: Unauthorized
        403:
          description: Forbidden

  /contracts/{id}:
    get:
      summary: Get a contract by id
      operationId: getContractById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contract'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found

  /balances/deposit/{userId}:
    post:
      summary: Deposit money to a user's balance
      operationId: depositBalance
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - amount
              properties:
                amount:
                  type: number
                  minimum: 0
                  maximum: 9999999999
      responses:
        200:
          description: OK
        400:
          description: Bad Request
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found

  /jobs/unpaid:
    get:
      summary: Get all unpaid jobs for active contracts of the current user (either as a client or contractor)
      operationId: getUnpaidJobs
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Job'
        401:
          description: Unauthorized
        403:
          description: Forbidden

  /jobs/{id}/pay:
    post:
      summary: Pay for a job as a client
      operationId: payJob
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: OK
        400:
          description: Bad Request
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found

components:
  securitySchemes:
    ProfileIdAuth:
      type: apiKey
      in: header
      name: profile_id

  schemas:
    Contract:
      type: object
      required:
        - terms
        - ContractorId
        - ClientId
      properties:
        id:
          type: integer
        terms:
          type: string
        status:
          type: string
          enum: [new, in_progress, terminated]
          nullable: true
        ContractorId:
          type: integer
        ClientId:
          type: integer

    Job:
      type: object
      required:
        - description
        - price
        - ContractId
      properties:
        id:
          type: integer
        description:
          type: string
        price:
          type: number
          minimum: 0
          maximum: 9999999999
        paid:
          type: boolean
          default: false
          nullable: true
        paymentDate:
          type: string
          format: date
          nullable: true
        ContractId:
          type: integer
